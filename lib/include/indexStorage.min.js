var indexStorage;indexStorage=class{constructor(e){this.node_env=null!=e&&e.NODE_ENV||"",this.version=1,this.__indexDBObj=void 0,this.__IDBTransactionObj=void 0,this.__IDBKeyRangeObj=void 0,this.__database=void 0,window.indexedDB&&(this.__indexDBObj=window.indexedDB,this.__IDBTransactionObj=window.IDBTransaction,this.__IDBKeyRangeObj=window.IDBKeyRange,"develop"===this.node_env?this.__dbname="__indexstorage_db_develop__":this.__dbname="__indexstorage_db_production__")}__connectDB(){return new Promise((e,t)=>{var r;return(r=this.__indexDBObj.open(this.__dbname,this.version)).onupgradeneeded=(e=>{var t,r,a;return(a=(t=e.target.result).createObjectStore("indexStorage",{keyPath:"key"})).createIndex("primary_key","key",{unique:!0,multiEntry:!1}),(a=t.createObjectStore("preference",{keyPath:"key"})).createIndex("primary_key","key",{unique:!0,multiEntry:!1}),r=[],a.put({key:"keylist",val:r})}),r.onsuccess=(t=>(this.__database=t.target.result,e(!0))),r.onerror=(e=>t(!1))})}__addKeylist(e){return new Promise(async(t,r)=>{var a;return(a=await this.getItem("keylist","preference")).indexOf(e)<0&&(a.push(e),await this.setItem("keylist",a,"preference")),t(a)})}__removeKeylist(e){return new Promise(async(t,r)=>{var a,n;return(a=(n=await this.getItem("keylist","preference")).indexOf(e))>=0&&(n.splice(a,1),await this.setItem("keylist",n,"preference")),t(n)})}length(){return new Promise(async(e,t)=>{var r,a;try{return await this.__connectDB(),r=this.__database.transaction(["indexStorage"],"readonly").objectStore("indexStorage"),(a=r.count()).onerror=(e=>(this.__database.close(),t(void 0))),a.onsuccess=(t=>{var r;return r=a.result,e(r)})}catch(e){}})}key(e){return new Promise(async(t,r)=>{try{return t((await this.getItem("keylist","preference"))[parseInt(e)])}catch(e){return e,r(void 0)}})}getItem(e,t="indexStorage"){return new Promise(async(r,a)=>{var n,s;return await this.__connectDB(),n=this.__database.transaction([t],"readonly").objectStore(t),(s=n.get(e)).onerror=(e=>(this.__database.close(),a(void 0))),s.onsuccess=(t=>{var a;return a=void 0,null!=s.result&&s.result.key===e&&(a=s.result.val),this.__database.close(),r(a)})})}setItem(e,t,r="indexStorage"){return new Promise(async(a,n)=>{var s;return await this.__connectDB(),(s=this.__database.transaction([r],"readwrite")).objectStore(r).put({key:e,val:t}),"indexStorage"===r&&await this.__addKeylist(e),s.onerror=(e=>(this.__database.close(),n(!1))),s.oncomplete=(e=>(this.__database.close(),a(!0)))})}removeItem(e,t="indexStorage"){return new Promise(async(r,a)=>{var n;return await this.__connectDB(),n=this.__database.transaction([t],"readwrite").objectStore(t).delete(e),await this.__removeKeylist(e),n.onerror=(e=>(this.__database.close(),a(!1))),n.onsuccess=(e=>(this.__database.close(),r(!0)))})}clear(){return new Promise((e,t)=>{try{return this.__indexDBObj.deleteDatabase(this.__dbname),this.__database=void 0,e(!0)}catch(e){return t(!1)}})}};